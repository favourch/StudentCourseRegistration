//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace StudentRegistration.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://microsoft.com/webservices/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback validateUserAccountWSOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCourseListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCourseDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback getStudentInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getuseridOperationCompleted;
        
        private System.Threading.SendOrPostCallback addcourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEnrolledCoursesOperationCompleted;
        
        private System.Threading.SendOrPostCallback dropCourseOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCourseHistoryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::StudentRegistration.Properties.Settings.Default.StudentRegistration_localhost_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event validateUserAccountWSCompletedEventHandler validateUserAccountWSCompleted;
        
        /// <remarks/>
        public event getCourseListCompletedEventHandler getCourseListCompleted;
        
        /// <remarks/>
        public event getCourseDetailsCompletedEventHandler getCourseDetailsCompleted;
        
        /// <remarks/>
        public event getStudentInfoCompletedEventHandler getStudentInfoCompleted;
        
        /// <remarks/>
        public event getuseridCompletedEventHandler getuseridCompleted;
        
        /// <remarks/>
        public event addcourseCompletedEventHandler addcourseCompleted;
        
        /// <remarks/>
        public event getEnrolledCoursesCompletedEventHandler getEnrolledCoursesCompleted;
        
        /// <remarks/>
        public event dropCourseCompletedEventHandler dropCourseCompleted;
        
        /// <remarks/>
        public event getCourseHistoryCompletedEventHandler getCourseHistoryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/validateUserAccountWS", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string validateUserAccountWS(string emailIn) {
            object[] results = this.Invoke("validateUserAccountWS", new object[] {
                        emailIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void validateUserAccountWSAsync(string emailIn) {
            this.validateUserAccountWSAsync(emailIn, null);
        }
        
        /// <remarks/>
        public void validateUserAccountWSAsync(string emailIn, object userState) {
            if ((this.validateUserAccountWSOperationCompleted == null)) {
                this.validateUserAccountWSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvalidateUserAccountWSOperationCompleted);
            }
            this.InvokeAsync("validateUserAccountWS", new object[] {
                        emailIn}, this.validateUserAccountWSOperationCompleted, userState);
        }
        
        private void OnvalidateUserAccountWSOperationCompleted(object arg) {
            if ((this.validateUserAccountWSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.validateUserAccountWSCompleted(this, new validateUserAccountWSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/getCourseList", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Course[] getCourseList(string semIn) {
            object[] results = this.Invoke("getCourseList", new object[] {
                        semIn});
            return ((Course[])(results[0]));
        }
        
        /// <remarks/>
        public void getCourseListAsync(string semIn) {
            this.getCourseListAsync(semIn, null);
        }
        
        /// <remarks/>
        public void getCourseListAsync(string semIn, object userState) {
            if ((this.getCourseListOperationCompleted == null)) {
                this.getCourseListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCourseListOperationCompleted);
            }
            this.InvokeAsync("getCourseList", new object[] {
                        semIn}, this.getCourseListOperationCompleted, userState);
        }
        
        private void OngetCourseListOperationCompleted(object arg) {
            if ((this.getCourseListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCourseListCompleted(this, new getCourseListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/getCourseDetails", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getCourseDetails(string courseID) {
            object[] results = this.Invoke("getCourseDetails", new object[] {
                        courseID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getCourseDetailsAsync(string courseID) {
            this.getCourseDetailsAsync(courseID, null);
        }
        
        /// <remarks/>
        public void getCourseDetailsAsync(string courseID, object userState) {
            if ((this.getCourseDetailsOperationCompleted == null)) {
                this.getCourseDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCourseDetailsOperationCompleted);
            }
            this.InvokeAsync("getCourseDetails", new object[] {
                        courseID}, this.getCourseDetailsOperationCompleted, userState);
        }
        
        private void OngetCourseDetailsOperationCompleted(object arg) {
            if ((this.getCourseDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCourseDetailsCompleted(this, new getCourseDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/getStudentInfo", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] getStudentInfo(string userid) {
            object[] results = this.Invoke("getStudentInfo", new object[] {
                        userid});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void getStudentInfoAsync(string userid) {
            this.getStudentInfoAsync(userid, null);
        }
        
        /// <remarks/>
        public void getStudentInfoAsync(string userid, object userState) {
            if ((this.getStudentInfoOperationCompleted == null)) {
                this.getStudentInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetStudentInfoOperationCompleted);
            }
            this.InvokeAsync("getStudentInfo", new object[] {
                        userid}, this.getStudentInfoOperationCompleted, userState);
        }
        
        private void OngetStudentInfoOperationCompleted(object arg) {
            if ((this.getStudentInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getStudentInfoCompleted(this, new getStudentInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/getuserid", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string getuserid(string emailIn) {
            object[] results = this.Invoke("getuserid", new object[] {
                        emailIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getuseridAsync(string emailIn) {
            this.getuseridAsync(emailIn, null);
        }
        
        /// <remarks/>
        public void getuseridAsync(string emailIn, object userState) {
            if ((this.getuseridOperationCompleted == null)) {
                this.getuseridOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetuseridOperationCompleted);
            }
            this.InvokeAsync("getuserid", new object[] {
                        emailIn}, this.getuseridOperationCompleted, userState);
        }
        
        private void OngetuseridOperationCompleted(object arg) {
            if ((this.getuseridCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getuseridCompleted(this, new getuseridCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/addcourse", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string addcourse(string userid, string courseid, string semester) {
            object[] results = this.Invoke("addcourse", new object[] {
                        userid,
                        courseid,
                        semester});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addcourseAsync(string userid, string courseid, string semester) {
            this.addcourseAsync(userid, courseid, semester, null);
        }
        
        /// <remarks/>
        public void addcourseAsync(string userid, string courseid, string semester, object userState) {
            if ((this.addcourseOperationCompleted == null)) {
                this.addcourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddcourseOperationCompleted);
            }
            this.InvokeAsync("addcourse", new object[] {
                        userid,
                        courseid,
                        semester}, this.addcourseOperationCompleted, userState);
        }
        
        private void OnaddcourseOperationCompleted(object arg) {
            if ((this.addcourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addcourseCompleted(this, new addcourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/getEnrolledCourses", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Course[] getEnrolledCourses(string semIn, string studentidIn) {
            object[] results = this.Invoke("getEnrolledCourses", new object[] {
                        semIn,
                        studentidIn});
            return ((Course[])(results[0]));
        }
        
        /// <remarks/>
        public void getEnrolledCoursesAsync(string semIn, string studentidIn) {
            this.getEnrolledCoursesAsync(semIn, studentidIn, null);
        }
        
        /// <remarks/>
        public void getEnrolledCoursesAsync(string semIn, string studentidIn, object userState) {
            if ((this.getEnrolledCoursesOperationCompleted == null)) {
                this.getEnrolledCoursesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEnrolledCoursesOperationCompleted);
            }
            this.InvokeAsync("getEnrolledCourses", new object[] {
                        semIn,
                        studentidIn}, this.getEnrolledCoursesOperationCompleted, userState);
        }
        
        private void OngetEnrolledCoursesOperationCompleted(object arg) {
            if ((this.getEnrolledCoursesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEnrolledCoursesCompleted(this, new getEnrolledCoursesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/dropCourse", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string dropCourse(string courseid, string semester, string studentid) {
            object[] results = this.Invoke("dropCourse", new object[] {
                        courseid,
                        semester,
                        studentid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void dropCourseAsync(string courseid, string semester, string studentid) {
            this.dropCourseAsync(courseid, semester, studentid, null);
        }
        
        /// <remarks/>
        public void dropCourseAsync(string courseid, string semester, string studentid, object userState) {
            if ((this.dropCourseOperationCompleted == null)) {
                this.dropCourseOperationCompleted = new System.Threading.SendOrPostCallback(this.OndropCourseOperationCompleted);
            }
            this.InvokeAsync("dropCourse", new object[] {
                        courseid,
                        semester,
                        studentid}, this.dropCourseOperationCompleted, userState);
        }
        
        private void OndropCourseOperationCompleted(object arg) {
            if ((this.dropCourseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.dropCourseCompleted(this, new dropCourseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://microsoft.com/webservices/getCourseHistory", RequestNamespace="http://microsoft.com/webservices/", ResponseNamespace="http://microsoft.com/webservices/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Course[] getCourseHistory(string semIn, string studentidIn) {
            object[] results = this.Invoke("getCourseHistory", new object[] {
                        semIn,
                        studentidIn});
            return ((Course[])(results[0]));
        }
        
        /// <remarks/>
        public void getCourseHistoryAsync(string semIn, string studentidIn) {
            this.getCourseHistoryAsync(semIn, studentidIn, null);
        }
        
        /// <remarks/>
        public void getCourseHistoryAsync(string semIn, string studentidIn, object userState) {
            if ((this.getCourseHistoryOperationCompleted == null)) {
                this.getCourseHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCourseHistoryOperationCompleted);
            }
            this.InvokeAsync("getCourseHistory", new object[] {
                        semIn,
                        studentidIn}, this.getCourseHistoryOperationCompleted, userState);
        }
        
        private void OngetCourseHistoryOperationCompleted(object arg) {
            if ((this.getCourseHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCourseHistoryCompleted(this, new getCourseHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.81.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://microsoft.com/webservices/")]
    public partial class Course {
        
        private string courseIDField;
        
        private string courseNameField;
        
        private string scheduleField;
        
        private string classtypeField;
        
        private string profField;
        
        private string prereqcourseidField;
        
        private string descpField;
        
        private string semesterField;
        
        private string classroomField;
        
        private bool isprereqField;
        
        private string statusField;
        
        /// <remarks/>
        public string courseID {
            get {
                return this.courseIDField;
            }
            set {
                this.courseIDField = value;
            }
        }
        
        /// <remarks/>
        public string courseName {
            get {
                return this.courseNameField;
            }
            set {
                this.courseNameField = value;
            }
        }
        
        /// <remarks/>
        public string schedule {
            get {
                return this.scheduleField;
            }
            set {
                this.scheduleField = value;
            }
        }
        
        /// <remarks/>
        public string classtype {
            get {
                return this.classtypeField;
            }
            set {
                this.classtypeField = value;
            }
        }
        
        /// <remarks/>
        public string prof {
            get {
                return this.profField;
            }
            set {
                this.profField = value;
            }
        }
        
        /// <remarks/>
        public string prereqcourseid {
            get {
                return this.prereqcourseidField;
            }
            set {
                this.prereqcourseidField = value;
            }
        }
        
        /// <remarks/>
        public string descp {
            get {
                return this.descpField;
            }
            set {
                this.descpField = value;
            }
        }
        
        /// <remarks/>
        public string semester {
            get {
                return this.semesterField;
            }
            set {
                this.semesterField = value;
            }
        }
        
        /// <remarks/>
        public string classroom {
            get {
                return this.classroomField;
            }
            set {
                this.classroomField = value;
            }
        }
        
        /// <remarks/>
        public bool isprereq {
            get {
                return this.isprereqField;
            }
            set {
                this.isprereqField = value;
            }
        }
        
        /// <remarks/>
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void validateUserAccountWSCompletedEventHandler(object sender, validateUserAccountWSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class validateUserAccountWSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal validateUserAccountWSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getCourseListCompletedEventHandler(object sender, getCourseListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCourseListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCourseListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Course[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Course[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getCourseDetailsCompletedEventHandler(object sender, getCourseDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCourseDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCourseDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getStudentInfoCompletedEventHandler(object sender, getStudentInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getStudentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getStudentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getuseridCompletedEventHandler(object sender, getuseridCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getuseridCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getuseridCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void addcourseCompletedEventHandler(object sender, addcourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addcourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addcourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getEnrolledCoursesCompletedEventHandler(object sender, getEnrolledCoursesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEnrolledCoursesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEnrolledCoursesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Course[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Course[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void dropCourseCompletedEventHandler(object sender, dropCourseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class dropCourseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal dropCourseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    public delegate void getCourseHistoryCompletedEventHandler(object sender, getCourseHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCourseHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCourseHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Course[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Course[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591